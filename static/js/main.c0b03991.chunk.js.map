{"version":3,"sources":["components/Linechart.js","components/ReportList.js","components/Dashboard.js","apis/GetData.js","App.js","index.js"],"names":["Chart","register","registerables","LineChart","props","canvasRef","React","createRef","this","myChart","data","labels","map","d","time","datasets","accident","fire","update","current","type","options","interaction","intersect","radius","plugins","title","display","text","scales","x","Date","toLocaleDateString","y","min","max","ticks","stepSize","label","backgroundColor","borderColor","ref","Component","ReportList","reports","useState","reportsR","setReportsR","useEffect","reverse","className","report","Row","Col","sm","Image","alt","uid","src","imageUrl","thumbnail","categories","fromNow","date","style","marginBottom","address_components","address","target","rel","href","latitude","longitude","email","Dashboard","dsbData","setdsbData","now","filter","hasOwnProperty","createdAt","getHours","getMinutes","ai_results","detected_class","push","sort","a","b","Card","border","Header","textAlign","Body","GetData","url","setData","isLoading","setIsLoading","isError","setIsError","Axios","get","then","response","status","Error","catch","err","message","App","Container","fluid","Tab","id","defaultActiveKey","Nav","variant","Item","Link","eventKey","Content","Pane","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0RAGAA,IAAMC,SAAN,MAAAD,IAAK,YAAaE,M,IA2EHC,E,kDAxEX,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,UAAYC,IAAMC,YAFN,E,sDAKnB,WACIC,KAAKC,QAAQC,KAAKC,OAASH,KAAKJ,MAAMM,KAAKE,KAAI,SAAAC,GAAC,OAAIA,EAAEC,QACtDN,KAAKC,QAAQC,KAAKK,SAAS,GAAGL,KAAOF,KAAKJ,MAAMM,KAAKE,KAAI,SAAAC,GAAC,OAAIA,EAAEG,YAChER,KAAKC,QAAQC,KAAKK,SAAS,GAAGL,KAAOF,KAAKJ,MAAMM,KAAKE,KAAI,SAAAC,GAAC,OAAIA,EAAEI,QAChET,KAAKC,QAAQS,W,+BAGjB,WACIV,KAAKC,QAAU,IAAIT,IAAMQ,KAAKH,UAAUc,QAAS,CAC/CC,KAAM,OACNC,QAAS,CACPC,YAAa,CACTC,WAAW,GAEfC,OAAQ,EACRC,QAAS,CACLC,MAAO,CACHC,SAAS,EACTC,KAAMpB,KAAKJ,MAAMsB,QAGzBG,OAAQ,CACJC,EAAG,CACCJ,MAAO,CACHC,SAAS,EACTC,KAAM,UAAW,IAAIG,MAAOC,uBAGpCC,EAAG,CACCP,MAAO,CACHC,SAAS,EACTC,KAAM,gBAEVM,IAAK,EACLC,IAAK,IACLC,MAAO,CAEHC,SAAU,MAKxB3B,KAAM,CACJC,OAAQH,KAAKJ,MAAMM,KAAKE,KAAI,SAAAC,GAAC,OAAIA,EAAEC,QACnCC,SAAU,CACN,CACIuB,MAAO,WACP5B,KAAMF,KAAKJ,MAAMM,KAAKE,KAAI,SAAAC,GAAC,OAAIA,EAAEG,YACjCuB,gBAAiB,OACjBC,YAAa,sBAEjB,CACIF,MAAO,OACP5B,KAAMF,KAAKJ,MAAMM,KAAKE,KAAI,SAAAC,GAAC,OAAIA,EAAEI,QACjCsB,gBAAiB,MACjBC,YAAa,4B,oBAO7B,WACE,OAAO,wBAAQC,IAAKjC,KAAKH,gB,GArEPC,IAAMoC,W,iDCkCfC,EAhCI,SAAC,GAAe,IAAdC,EAAa,EAAbA,QAAa,EACEC,mBAAS,MADX,mBACvBC,EADuB,KACbC,EADa,KAO9B,OAJAC,qBAAU,WACND,EAAYH,EAAQK,aACrB,CAACL,IAGA,qBAAKM,UAAU,aAAf,SACSJ,GAAYA,EACZlC,KAAI,SAACuC,GAAD,OACD,eAACC,EAAA,EAAD,CAAKF,UAAU,OAAf,UACI,cAACG,EAAA,EAAD,CAAKC,GAAI,EAAT,SACI,cAACC,EAAA,EAAD,CAAOC,IAAKL,EAAOM,IAAKC,IAAKP,EAAOQ,SAAUC,WAAS,MAE3D,eAACP,EAAA,EAAD,CAAKC,GAAI,EAAT,UACI,sBAAKJ,UAAU,OAAf,UAC8B,SAAzBC,EAAOU,WAAW,GAAgB,sBAAMX,UAAU,WAAhB,kBAAyC,GAClD,aAAzBC,EAAOU,WAAW,GAAoB,sBAAMX,UAAU,WAAhB,sBAA6C,MAExF,cAAC,IAAD,IALJ,IAKmB,cAAC,IAAD,CAAQY,SAAO,EAAf,SAAiBX,EAAOY,OACvC,oBAAGC,MAAO,CACNC,aAAc,GADlB,UAEG,cAAC,IAAD,IAAmBd,EAAOe,mBAAmBC,QAFhD,IAEyD,mBAAGC,OAAO,SAASC,IAAI,aAAaC,KAAM,8BAA8BnB,EAAOe,mBAAmBK,SAAS,IAAIpB,EAAOe,mBAAmBM,UAAzI,6BACzD,cAAC,IAAD,IATJ,UAS0BrB,EAAOsB,kB,QCsC1CC,EA/DG,SAAC,GAAiB,IAAf9B,EAAc,EAAdA,QAAc,EACDC,mBAAS,MADR,mBACxB8B,EADwB,KACfC,EADe,KAgD/B,OA7CA5B,qBAAU,WACN,IAAI2B,EAAU,GACRE,GAAM,IAAI9C,MAAOC,qBAsCvB,OApCAY,EAAQkC,QAAO,SAAC3B,GAEZ,GAAIA,EAAO4B,eAAe,cAAe,CACrC,IAAIhB,EAAOZ,EAAO6B,UAGlB,OADa,IAAIjD,KAAKgC,GAAM/B,uBACV6C,MAEvBjE,KAAI,SAACuC,GAEJ,IAAIM,EAAMN,EAAOM,IACbS,EAAqBf,EAAOe,mBAC5BP,EAAWR,EAAOQ,SAClBc,EAAQtB,EAAOsB,MACfV,EAAO,IAAIhC,KAAKoB,EAAO6B,WAGvBlE,EAFQiD,EAAKkB,WAEC,MADJlB,EAAKmB,aAGfjE,EAAOkC,EAAOgC,WAAWC,eAAenE,KACxCD,EAAWmC,EAAOgC,WAAWC,eAAepE,SAC5C6C,EAAaV,EAAOgC,WAAWtB,WAEnCc,EAAQU,KAAK,CACT5B,MACAM,OACAjD,OACAG,OACAD,WACA6C,aACAK,qBACAP,WACAc,aAIDG,EAAWD,EAAQW,MAAK,SAACC,EAAGC,GAC/B,OAAO,IAAIzD,KAAKwD,EAAExB,MAAQ,IAAIhC,KAAKyD,EAAEzB,YAE1C,CAACnB,IAGA,sBAAKM,UAAU,YAAf,UACKyB,GAAW,cAAC,EAAD,CAAWjE,KAAMiE,EAASjD,MAAM,wCAC5C,eAAC+D,EAAA,EAAD,CAAMvC,UAAU,OAAOwC,OAAO,QAA9B,UACI,cAACD,EAAA,EAAKE,OAAN,UACI,oBAAI3B,MAAO,CAAC4B,UAAW,UAAvB,8BAEA,cAACH,EAAA,EAAKI,KAAN,UACKlB,GAAW,cAAC,EAAD,CAAY/B,QAAS+B,a,yCC7B1CmB,EA9BC,SAACC,GAAS,IAAD,EACGlD,mBAAS,MADZ,mBACdnC,EADc,KACRsF,EADQ,OAEanD,oBAAS,GAFtB,mBAEdoD,EAFc,KAEHC,EAFG,OAGSrD,mBAAS,MAHlB,mBAGdsD,EAHc,KAGLC,EAHK,KA2BrB,OAtBApD,qBAAU,WAGFqD,IAAMC,IAAIP,GACTQ,MAAK,SAAAC,GACN,GAAwB,MAApBA,EAASC,OACT,MAAMC,MAAM,8CAEhB,OAAOF,EAAS9F,QAEf6F,MAAK,SAAA7F,GACFsF,EAAQtF,EAAKA,MACbwF,GAAa,GACbE,EAAW,SAEdO,OAAM,SAAAC,GACHV,GAAa,GACbE,EAAWQ,EAAIC,cAGxB,CAACd,IAEG,CAACrF,OAAMuF,YAAWE,YCIdW,MA9Bf,WAAgB,IAAD,EAC+BhB,EAAQ,+CAAvClD,EADA,EACNlC,KAAeuF,EADT,EACSA,UAAWE,EADpB,EACoBA,QAEjC,OACE,cAACY,EAAA,EAAD,CAAWC,OAAK,EAAC9D,UAAU,MAA3B,SACE,cAAC+D,EAAA,EAAIF,UAAL,CAAeG,GAAG,oBAAoBC,iBAAiB,QAAvD,SACE,eAAC/D,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAKC,GAAI,EAAT,SACE,cAAC8D,EAAA,EAAD,CAAKC,QAAQ,QAAQnE,UAAU,cAA/B,SACE,cAACkE,EAAA,EAAIE,KAAL,CAAUpE,UAAU,GAApB,SACE,cAACkE,EAAA,EAAIG,KAAL,CAAUC,SAAS,QAAnB,2BAIN,cAACnE,EAAA,EAAD,CAAKC,GAAI,EAAT,SACE,cAAC2D,EAAA,EAAIQ,QAAL,UACE,eAACR,EAAA,EAAIS,KAAL,CAAUF,SAAS,QAAnB,UACIrB,GAAW,8BAAMA,IACjBF,GAAa,mDACbrD,GAAW,cAAC,EAAD,CAAWA,QAASA,mB,MChBjD+E,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.c0b03991.chunk.js","sourcesContent":["import { Chart, registerables } from \"chart.js\";\nimport React from \"react\";\n\nChart.register(...registerables);\n\nclass LineChart extends React.Component {\n    constructor(props) {\n      super(props);\n      this.canvasRef = React.createRef();\n    }\n\n    componentDidUpdate() {\n        this.myChart.data.labels = this.props.data.map(d => d.time);\n        this.myChart.data.datasets[0].data = this.props.data.map(d => d.accident);\n        this.myChart.data.datasets[1].data = this.props.data.map(d => d.fire);\n        this.myChart.update();\n      }\n\n    componentDidMount() {\n        this.myChart = new Chart(this.canvasRef.current, {\n          type: 'line',\n          options: {\n            interaction: {\n                intersect: false\n            },\n            radius: 0,\n            plugins: {\n                title: {\n                    display: true,\n                    text: this.props.title\n                }\n            },\n            scales: {\n                x: {\n                    title: {\n                        display: true,\n                        text: 'Date: ' + new Date().toLocaleDateString()\n                    }\n                },\n                y: {\n                    title: {\n                        display: true,\n                        text: \"1 = Detected\"\n                    },\n                    min: 0,\n                    max: 1.5,\n                    ticks: {\n                        // forces step size to be 50 units\n                        stepSize: 1\n                      }\n                }\n            }\n          },\n          data: {\n            labels: this.props.data.map(d => d.time),\n            datasets: [\n                {\n                    label: \"Accident\",\n                    data: this.props.data.map(d => d.accident),\n                    backgroundColor: \"blue\",\n                    borderColor: \"rgb(122, 136, 255)\"\n                },\n                {\n                    label: \"Fire\",\n                    data: this.props.data.map(d => d.fire),\n                    backgroundColor: \"red\",\n                    borderColor: \"rgb(255, 130, 130)\"\n                },\n            ]\n          },\n        });\n      }\n  \n    render() {\n      return <canvas ref={this.canvasRef} />;\n    }\n  }\n\nexport default LineChart\n","import { useEffect, useState } from \"react\";\nimport { Col, Row, Image} from \"react-bootstrap\";\nimport Moment from 'react-moment';\nimport { FaRegClock, FaMapMarkerAlt, FaUserEdit } from \"react-icons/fa\";\n\n\n\nconst ReportList = ({reports}) => {\n    const [reportsR, setReportsR] = useState(null)\n\n    useEffect(() => {\n        setReportsR(reports.reverse()) \n    }, [reports]);\n\n    return ( \n        <div className=\"reportlist\">\n                {reportsR && reportsR\n                .map((report) => (\n                    <Row className=\"mt-2\">\n                        <Col sm={5}>\n                            <Image alt={report.uid} src={report.imageUrl} thumbnail />\n                        </Col>\n                        <Col sm={7}>\n                            <div className=\"mb-1\">\n                                {report.categories[0] === 'Fire' ? <span className=\"myBadgeR\">Fire</span> : ''}\n                                {report.categories[1] === 'Accident' ? <span className=\"myBadgeB\">Accident</span> : ''}\n                            </div>\n                            <FaRegClock /> <Moment fromNow>{report.date}</Moment>\n                            <p style={{\n                                marginBottom: 0\n                            }}><FaMapMarkerAlt />{report.address_components.address} <a target=\"_blank\" rel=\"noreferrer\" href={'https://maps.google.com/?q='+report.address_components.latitude+\",\"+report.address_components.longitude}>See Location</a></p>\n                            <FaUserEdit /> From: {report.email}\n                        </Col>\n                    </Row>\n            ))}\n        </div>\n     );\n}\n \nexport default ReportList;","/* eslint-disable array-callback-return */\nimport { useEffect, useState } from \"react\";\nimport LineChart from \"./Linechart\";\nimport ReportList from './ReportList';\nimport { Card, Container, Col, Row } from \"react-bootstrap\";\n\nconst Dashboard = ({ reports }) => {\n    const [dsbData, setdsbData] = useState(null)\n\n    useEffect(() => {\n        let dsbData = []\n        const now = new Date().toLocaleDateString()\n        \n        reports.filter((report) => {\n\n            if (report.hasOwnProperty('ai_results')) {\n                let date = report.createdAt\n    \n                let myDate = new Date(date).toLocaleDateString()\n                return myDate === now\n            }\n        }).map((report) => {\n                \n            let uid = report.uid;\n            let address_components = report.address_components;\n            let imageUrl = report.imageUrl;\n            let email = report.email;\n            let date = new Date(report.createdAt);\n            let hours = date.getHours()\n            let minutes = date.getMinutes()\n            let time = hours +\" : \"+ minutes\n        \n            let fire = report.ai_results.detected_class.fire\n            let accident = report.ai_results.detected_class.accident\n            let categories = report.ai_results.categories\n        \n            dsbData.push({\n                uid,\n                date,\n                time,\n                fire,\n                accident,\n                categories,\n                address_components,\n                imageUrl,\n                email\n            })\n        })\n\n        return setdsbData(dsbData.sort((a, b) => {\n            return new Date(a.date) - new Date(b.date) \n        }))\n    }, [reports])\n\n    return (\n        <div className=\"dashboard\">\n            {dsbData && <LineChart data={dsbData} title=\"Realtime Detected Fire And Accident\"/>}\n            <Card className=\"mt-4\" border=\"light\">\n                <Card.Header>\n                    <h4 style={{textAlign: \"center\"}}>Today's Report</h4>\n                </Card.Header>\n                    <Card.Body>\n                        {dsbData && <ReportList reports={dsbData} />}\n                    </Card.Body>\n            </Card>\n        </div>\n    )\n}\n\nexport default Dashboard","import { useState, useEffect } from 'react'\nimport Axios from \"axios\"\n\nconst GetData = (url) => {\n    const [data, setData] = useState(null)\n    const [isLoading, setIsLoading] = useState(true)\n    const [isError, setIsError] = useState(null)\n\n    useEffect(() => {\n        // window.setInterval(() => {\n            \n            Axios.get(url)\n            .then(response => {\n            if (response.status !== 200) {\n                throw Error(\"Could not fetch the data for that resource\")\n            }\n            return response.data\n            })\n            .then(data => {\n                setData(data.data)\n                setIsLoading(false)\n                setIsError(null)\n            })\n            .catch(err => {\n                setIsLoading(false)\n                setIsError(err.message)\n            })\n        // }, 3000)\n    }, [url])\n    \n    return {data, isLoading, isError};\n}\n\nexport default GetData;","import Dashboard from \"./components/Dashboard\";\nimport { Container, Nav, Row, Col, Tab, Badge } from \"react-bootstrap\";\nimport GetData from \"./apis/GetData\";\n\nfunction App (){\n  const {data: reports, isLoading, isError} = GetData(\"https://quiport.et.r.appspot.com/api/report\")\n\n  return (\n    <Container fluid className=\"p-3\">\n      <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"first\">\n        <Row>\n          <Col sm={2}>\n            <Nav variant=\"pills\" className=\"flex-column\">\n              <Nav.Item className=\"\">\n                <Nav.Link eventKey=\"first\">Monitor</Nav.Link>\n              </Nav.Item>\n            </Nav>\n          </Col>\n          <Col sm={9}>\n            <Tab.Content>\n              <Tab.Pane eventKey=\"first\">\n                { isError && <div>{isError}</div>}\n                { isLoading && <div>Loading data ...</div>}\n                { reports && <Dashboard reports={reports} /> }\n              </Tab.Pane>\n            </Tab.Content>\n          </Col>\n        </Row>\n      </Tab.Container>\n  </Container>\n  );\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './App.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}